# Wallet - Carteira Digital

**_NOTE:_** First check the version installed on your machine, this project uses Java 17.
To run the tests run these commands
```
./mvnw test
```
Run the following command line to run the database
```
	docker-compose up -d
```
To run the application in a container, run the following command
```
docker build -t wallet-app .
docker run --rm -it --network wallet_minha-rede -e SPRING_DATASOURCE_URL=jdbc:postgresql://meu-postgres-db:5432/postgres -e SPRING_DATASOURCE_USERNAME=postgres -e SPRING_DATASOURCE_PASSWORD=1234  -p 8080:8080  wallet-app

```
**_Design Choices of ArchitectureWe_**
Opted for a container-based architecture using Docker to ensure portability, scalability, and ease of management of the application execution environment. We separated the services into two containers: one for the application (Wallet) and another for the database (PostgreSQL), connected by a custom Docker network.

**_Non-Functional Requirements_** 
Met Portability: The use of Docker allows the application to run in any environment with Docker installed. Security: It prevents the use of sensitive credentials in the source code by using environment variables. 
Scalability: The separation between application and database facilitates individual scaling. Performance and Startup: It uses a lightweight base image (eclipse-temurin:17-jdk-alpine) for reduced startup time. Maintainability: The modular organization of the project allows for isolated modifications and updates.

**_Functional Requirements_**  MetData persistence for the wallet.Operationalization through Docker and docker-compose commands.Connection to the database via external parameters.